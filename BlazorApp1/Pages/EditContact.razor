@page  "/editcontacts/{ID:guid}"

@using BlazorContacts.Data
@using Microsoft.EntityFrameworkCore
@inject NavigationManager NavigationManager
@inject IDbContextFactory<ContactDbContext> DbFactory

<h1>Edit Contact</h1>

<EditForm EditContext="@editContext" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <p>
        <label>
            FirstName:
            <InputText @bind-Value="Contact.FirstName" />
        </label>
    </p>
    <p>
        <label>
            LastName:
            <InputText @bind-Value="Contact.LastName" />
        </label>
    </p>
    <p>
        <label>
            Birthday:
            <InputDate @bind-Value="Contact.BirthDate" />

        </label>
    </p>
    <p>
        <label>
            Phone Number:
            <InputText @bind-Value="Contact.PhoneNumber" />
        </label>
    </p>


    <button class="btn btn-primary" type="submit">Submit</button>
    <button class="btn btn-primary" type="button" value="Delete" @onclick="OnDelete">Delete</button>
    <button class="btn btn-primary" type="button" value="Cancel" @onclick="OnCancel">Cancel</button>


</EditForm>





@code {

    [Parameter]
    public Guid ID { set; get; }

    private ContactForm Contact = new ContactForm();
    private EditContext editContext;



    protected override void OnInitialized()
    {

        ContactDbContext context = DbFactory.CreateDbContext();
        Contact con = context.Contacts.Single(c => c.Id.Equals(ID));//ConService.GetContact(ID);


        if (con == null)
        {
            Contact.FirstName = "Null";
            Contact.LastName = "Null";
            Contact.PhoneNumber = "Null";
            Contact.BirthDate = DateTime.Now;
        }
        else
        {

            Contact.FirstName = con.FirstName;
            Contact.LastName = con.LastName;
            Contact.PhoneNumber = con.PhoneNumber;
            Contact.BirthDate = con.BirthDate;
        }

        editContext = new EditContext(Contact);


    }


    private void HandleValidSubmit()
    {


        var isValid = editContext.Validate();

        if (isValid)
        {
            ContactDbContext context = DbFactory.CreateDbContext();
            Contact con = context.Contacts.Single(c => c.Id.Equals(ID));//ConService.GetContact(ID);

            con.FirstName = Contact.FirstName;
            con.LastName = Contact.LastName;
            con.PhoneNumber = Contact.PhoneNumber;
            con.BirthDate = Contact.BirthDate;
            context.SaveChanges();
            NavigationManager.NavigateTo("contacts");

        }
        else
        {
            //Do nothing for now
        }

    }


    private void OnDelete()
    {
        ContactDbContext context = DbFactory.CreateDbContext();
        Contact con = context.Contacts.Single(c => c.Id.Equals(ID));// Contact con = ConService.GetContact(ID);
        context.Remove(con);// ConService.RemoveContact(con);
        context.SaveChanges();
        NavigationManager.NavigateTo("contacts");
    }

    private void OnCancel()
    {
        NavigationManager.NavigateTo("contacts");
    }
}
